{"version":3,"sources":["components/PostBox/index.js","utils/queries.js","utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","assets/spinner.gif","pages/ClubDetail.js","components/ClubItem/index.js","components/ClubsList/index.js","pages/Clubs.js","components/BookItem/index.js","components/BookList/index.js","components/GenreMenu/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["PostBox","post","_id","text","user","className","QUERY_BOOKS","gql","QUERY_CHECKOUT","QUERY_GENRES","QUERY_USER","QUERY_CLUBS","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","UPDATE_BOOKS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_GENRES","UPDATE_CURRENT_GENRE","UPDATE_CLUBS","reducer","state","action","type","books","cartOpen","cart","book","map","purchaseQuantity","newState","filter","length","genres","currentGenre","clubs","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","users","useReducer","dispatch","useStoreContext","useContext","CartItem","item","src","image","alt","price","placeholder","onChange","target","parseInt","role","onClick","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","data","toggleCart","useEffect","then","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","bookIds","i","push","variables","ClubDetail","useState","currentClub","setCurrentClub","currentBook","setCurrentBook","useQuery","loading","bookid","clubid","find","club","indexedClubs","to","description","id","itemInCart","cartItem","disabled","p","posts","spinner","ClubItem","locked","ClubsList","Clubs","BookItem","quantity","BookList","genre","GenreMenu","Home","Detail","useParams","indexedBooks","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","Signup","addUser","userName","class","Nav","href","logout","Success","addOrder","products","setTimeout","saveOrder","OrderHistory","firstName","lastName","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.faea305a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import { useStoreContext } from '../../utils/GlobalState';\n// import { useQuery } from '@apollo/client';\n// import { UPDATE_POST } from '../../utils/mutations';\n\nfunction PostBox(post) {\n  let { _id, text, user /*likes, dislikes*/ } = post;\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <h3>{user}</h3>\n      <p>{text}</p>\n      {/* <button onClick={functionHandleLikes}>Likes: {likes}</button> */}\n      <br></br>\n      {/* <span>Dislikes: {dislikes}</span> */}\n    </div>\n  );\n}\n\nexport default PostBox;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_BOOKS = gql`\nquery getBooks {\n  books {\n    _id\n    name\n    description\n    price\n    image\n    genre {\n      _id\n      name\n    \n    }\n  }\n}\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($books: [ID]!) {\n    checkout(books: $books) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_BOOKS = gql`\n  {\n    books {\n      _id\n      name\n      description\n      price\n      quantity\n      genre {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_GENRES = gql`\n  {\n    genres {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        books {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_CLUBS = gql`\nquery clubs {\n  clubs {\n    _id\n    name\n    locked\n    image\n    description\n    book {\n      description\n      name\n      _id\n    }\n    posts {\n      text\n      user\n      _id\n    }\n    users {\n      userName\n      _id\n    }\n  }\n}`\n\nexport const QUERY_POSTS = gql`\nquery Posts {\n  posts {\n    text\n    user\n    likes\n    dislikes\n    _id\n  }\n}`","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('books', { keyPath: '_id' });\n      db.createObjectStore('genres', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n      db.createObjectStore('clubs', { keyPath: '_id' });\n      db.createObjectStore('posts', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_BOOKS = \"UPDATE_BOOKS\";\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\nexport const UPDATE_DISLIKES = \"UPDATE_DISLIKES\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_GENRES = \"UPDATE_GENRES\";\nexport const UPDATE_CURRENT_GENRE = \"UPDATE_CURRENT_GENRE\";\nexport const UPDATE_CLUBS = \"UPDATE_CLUBS\"\n\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_BOOKS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_GENRES,\n  CLEAR_CART,\n  TOGGLE_CART,\n  UPDATE_CURRENT_GENRE,\n  UPDATE_CLUBS\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_BOOKS:\n      return {\n        ...state,\n        books: [...action.books],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.book],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.books],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(book => {\n          if (action._id === book._id) {\n            book.purchaseQuantity = action.purchaseQuantity\n          }\n          return book\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(book => {\n        return book._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_GENRES:\n      return {\n        ...state,\n        genres: [...action.genres],\n      };\n\n    case UPDATE_CURRENT_GENRE:\n      return {\n        ...state,\n        currentGenre: action.currentGenre\n      };\n\n      case UPDATE_CLUBS:\n        return {\n          ...state,\n          clubs: action.clubs\n        };\n    default:\n      return state;\n  }\n};\n\nexport function useBookReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useBookReducer } from \"./reducers\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useBookReducer({\n    cart: [],\n    cartOpen: false,\n    currentGenre: \"\",\n    books: [],\n    users: [],\n    genres: [],\n    clubs: [],\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [state, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n  // Then we should redirect to the checkout with a reference to our session id\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n  // If so, invoke the getCart method and populate the cart with the existing from the session\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, books: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // When the submit checkout method is invoked, loop through each item in the cart\n  // Add each item id to the bookIds array and then invoke the getCheckout query passing an object containing the id for all our books\n  function submitCheckout() {\n    const bookIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        bookIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { books: bookIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {/* Check to see if the user is logged in. If so render a button to check out */}\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport PostBox from '../components/PostBox';\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_BOOKS,\n  UPDATE_CLUBS,\n} from '../utils/actions';\nimport { QUERY_CLUBS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction ClubDetail() {\n  const [state, dispatch] = useStoreContext();\n  \n\n  const [currentClub, setCurrentClub] = useState();\n  const [currentBook, setCurrentBook] = useState();\n\n  const { loading, data } = useQuery(QUERY_CLUBS);\n\n  const { clubs, cart, books } = state;\n  \n  const  bookid  = data.clubs[0].book._id\n  const  clubid = data.clubs[0]._id\n  useEffect(() => {\n    console.log(books)\n    console.log(bookid)\n    setCurrentClub(clubs.find((club) => club._id === clubid));\n    setCurrentBook(books.find((book) => book._id === bookid));\n    // already in global store\n    if (clubs.length) {\n\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_CLUBS,\n        clubs: data.clubs,\n      });\n\n      data.clubs.forEach((club) => {\n        idbPromise('clubs', 'put', club);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('clubs', 'get').then((indexedClubs) => {\n        dispatch({\n          type: UPDATE_CLUBS,\n          clubs: indexedClubs,\n        });\n      });\n    }\n  }, []);\n\n  const addToCart = () => {\n    const  id  = currentBook._id;\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        book: { ...currentBook, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentBook, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentBook._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentBook });\n  };\n  console.log(currentClub);\n  return (\n    <>\n      {currentClub && cart ? (\n        \n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Books</Link>\n\n          <h2>{currentClub.name + ` - `}</h2>\n\n          <p>{currentClub.description}</p>\n\n          <p>\n            {/* <strong>Price:</strong>${currentClub.book.price}{' '} */}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentBook._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentClub.image}`}\n            alt={currentClub.name}\n          />\n          <div>\n          {currentClub.posts.map((post) => (\n            <PostBox\n              key={post._id}\n              _id={post._id}\n              text={post.text}\n              user={post.user}\n              // likes={post.likes}\n              // dislikes={post.dislikes}              \n            />\n          ))}\n          </div>\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default ClubDetail;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\n\n\nfunction ClubItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    description,\n    locked,\n    book,\n  } = item;\n\n  const {  } = state\n\n\n   if (!locked) return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/clubs/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{description} </div>\n        <span>{book.name}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default ClubItem;\n","import React, { useEffect } from 'react';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CLUBS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CLUBS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\nimport ClubItem from '../ClubItem';\n\nfunction ClubsList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { clubs } = state;\n\n  const { loading, data } = useQuery(QUERY_CLUBS);\n\n  useEffect(() => {\n\n    if (data) {\n      dispatch({\n        type: UPDATE_CLUBS,\n        clubs: data.clubs,\n      });\n      data.clubs.forEach((club) => {\n        idbPromise('clubs', 'put', club);\n      });\n    } else if (!loading) {\n      idbPromise('clubs', 'get').then((clubs) => {\n        dispatch({\n          type: UPDATE_CLUBS,\n          clubs: clubs,\n        });\n      });\n    }\n  }, [loading]);\n  \n  console.log(data);\n  \n  return (\n    <div className=\"my-2\">\n      <h2>Clubs:</h2>\n      { state.clubs.length ? (\n        <div className=\"flex-row\">\n          {state.clubs.map((club) => (\n            <ClubItem\n              key={club._id}\n              _id={club._id}\n              image={club.image}\n              name={club.name}\n              description={club.description}\n              book={club.book}\n              locked={club.locked}\n              posts={club.posts}\n              \n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any clubs yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ClubsList;","import React from \"react\";\nimport ClubsList from \"../components/ClubsList\";\nimport Cart from \"../components/Cart\";\n\nconst Clubs = () => {\n  return (\n    <div className=\"container\">\n      <ClubsList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Clubs;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction BookItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const { image, name, _id, price, quantity } = item;\n\n  const { cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n    console.log(itemInCart);\n    console.log(cart);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        book: { ...item, purchaseQuantity: 1 },\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <div className=\"card px-1 py-2\">\n      <Link to={`/books/${_id}`}>\n        <img alt={name} src={`/images/${image}`} />\n        <p className=\"itemName\">{name}</p>\n      </Link>\n      <div>\n        <div className=\"itemStock\">\n          {quantity} {pluralize(\"item\", quantity)} in stock\n        </div>\n        <span className=\"itemPrice\">${price}</span>\n      </div>\n      <button className=\"addCartBtn\"onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default BookItem;\n","import React, { useEffect } from 'react';\nimport BookItem from '../BookItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_BOOKS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_BOOKS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction BookList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentGenre } = state;\n\n  const { loading, data } = useQuery(QUERY_BOOKS);\n\n  useEffect(() => {\n  \n    if (data) {\n      console.log(data)\n      dispatch({\n        type: UPDATE_BOOKS,\n        books: data.books,\n      });\n      data.books.forEach((book) => {\n        idbPromise('books', 'put', book);\n      });\n    } else if (!loading) {\n      idbPromise('books', 'get').then((books) => {\n        dispatch({\n          type: UPDATE_BOOKS,\n          books: books,\n        });\n      });\n    }\n  }, [loading]);\n  \n  function filterBooks() {\n\n    if (!currentGenre) {\n      return state.books;\n    }\n\n    return state.books.filter(\n      (book) => book.genre._id === currentGenre\n    );\n  }\n\n  \n  return (\n    <div className=\"my-2\">\n      <h2 className=\"bookListHeader\">Our Books:</h2>\n      { state.books.length ? (\n        <div className=\"flex-row\">\n          {filterBooks().map((book) => (\n            <BookItem\n              key={book._id}\n              _id={book._id}\n              image={book.image}\n              name={book.name}\n              price={book.price}\n              quantity={book.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any books yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default BookList;\n","import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_GENRES, UPDATE_CURRENT_GENRE } from \"../../utils/actions\";\nimport { QUERY_GENRES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction GenreMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { genres, currentGenre } = state;\n\n  const { loading, data } = useQuery(QUERY_GENRES);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_GENRES,\n        genres: data.genres,\n      });\n      data.genres.forEach((genre) => {\n        idbPromise(\"genres\", \"put\", genre);\n      });\n    } else if (!loading) {\n      idbPromise(\"genres\", \"get\").then((genres) => {\n        dispatch({\n          type: UPDATE_GENRES,\n          genres: genres,\n        });\n      });\n    }\n  }, [loading]);\n\n  const handleClick = (_id) => {\n    dispatch({\n      type: UPDATE_CURRENT_GENRE,\n      currentGenre: _id,\n    });\n  };\n\n  return (\n    <div className=\"bkGenre\">\n      <h2 className=\"py-2\">Choose a Genre:</h2>\n      {state.genres.map((item) => (\n        <button className=\"genreButton\"\n          key={item.name}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default GenreMenu;\n","import React from \"react\";\nimport BookList from \"../components/BookList\";\nimport GenreMenu from \"../components/GenreMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <GenreMenu />\n      <BookList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_BOOKS,\n} from '../utils/actions';\nimport { QUERY_BOOKS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentBook, setCurrentBook] = useState();\n\n  const { loading, data } = useQuery(QUERY_BOOKS);\n\n  const { books, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    console.log(currentBook)\n    if (books.length) {\n      setCurrentBook(books.find((book) => book._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_BOOKS,\n        books: data.books,\n      });\n\n      data.books.forEach((book) => {\n        idbPromise('books', 'put', book);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('books', 'get').then((indexedBooks) => {\n        dispatch({\n          type: UPDATE_BOOKS,\n          books: indexedBooks,\n        });\n      });\n    }\n  }, []);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        book: { ...currentBook, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentBook, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentBook._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentBook });\n  };\n\n  return (\n    <>\n      {currentBook && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Books</Link>\n\n          <h2>{currentBook.name + ` - `}</h2>\n\n          <p>{currentBook.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentBook.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentBook._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentBook.image}`}\n            alt={currentBook.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\nmutation addUser(\n  $userName: String!\n  $email: String!\n  $password: String!\n  ) {\n  addUser(\n    userName: $userName\n    email: $email\n    password: $password\n    ) {\n    token\n    user {\n      _id\n    }\n  }\n}\n`;\n\nexport const ADD_CLUB = gql`\nmutation addClub(\n  $name: String!\n  $description: String!\n  $image: String!\n  $admin: User\n  $book: Book!\n  ) {\n  addClub(\n    name: $name\n    description: $description\n    image: $image\n    admins: $admins\n    book: $book\n    ) {\n    book\n    club {\n      _id\n    }\n  }\n}\n`;\n\nexport const ADD_MEMBER = gql`\n  mutation addMember(\n    $userName: String!\n  ) {\n    addMember(\n      userName: $firstName\n    )\n  }\n`;\n\nexport const ADD_POST = gql`\nmutation addPost($text: String!, $user: String!) {\n  addPost(text: $text, user: $user) {\n    text,\n    user\n  }\n}`","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <section className=\"main\">\n      <div className=\"login-container\">\n        {/* <Link to=\"/signup\">← Go to Signup</Link> */}\n\n        <p className=\"title\">Welcome back!</p>\n        <div className=\"division\"></div>\n        <p className=\"welcome-note\">Login using your existing login credentials</p>\n        <form className=\"login-form\" onSubmit={handleFormSubmit}>\n          <div className=\"form-control\">\n            <input\n              className='py-2'\n              placeholder=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-control\">\n            <input\n              className='py-2'\n              placeholder=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n          </div>\n          {error ? (\n            <div>\n              <p className=\"error-text\">The provided credentials are incorrect</p>\n            </div>\n          ) : null}\n          <div className=\"\">\n            <button type=\"submit\" className=\"submit\">Login</button>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        userName: formState.userName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <section className=\"main\">\n      <div className=\"login-container\">\n        {/* <Link to=\"/login\">← Go to Login</Link> */}\n\n        <p className=\"title\">Sign up!</p>\n        <div className=\"signUpDivision\"></div>\n        <p class=\"welcome-note\">Please enter a username, as well as a valid email address and password</p>\n        <form className=\"login-form\" onSubmit={handleFormSubmit}>\n          <div className=\"form-control\">\n            <input\n              className=\"signup py-2\"\n              placeholder=\"Username\"\n              name=\"userName\"\n              type=\"userName\"\n              id=\"userName\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-control\">\n            <input\n              className=\"signup py-2\"\n              placeholder=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-control\">\n\n            <input\n              className=\"signup py-2\"\n              placeholder=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"\">\n            <button className=\"submit\" type=\"submit\">Sign Up</button>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row nav-con\">\n\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1 nav-item\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1 nav-item\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n          <li className=\"mx-1 nav-item\">\n            <Link to=\"/clubs\">\n              View Clubs\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1 mx-1 nav-con\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">📖</span>\n          OpenBook\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport ClubDetail from \"./pages/ClubDetail\"\nimport Clubs from \"./pages/Clubs\"\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/success\" element={<Success />} />\n              <Route path=\"/orderHistory\" element={<OrderHistory />} />\n              <Route path=\"/books/:id\" element={<Detail />} />\n              <Route path=\"/clubs/:id\" element={<ClubDetail />} />\n              <Route path=\"/clubs\" element={<Clubs />} />\n              <Route path=\"*\" element={<NoMatch />} />\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}